[1.5.0-SNAPSHOT]
- Updated to libGDX 1.9.6, roboVM 2.3.0 and artemis-odb 2.1.0
- (#68) Added Checkbox, Slider and RadioButton UI elements
- Added Graphics#isWindowReady()
- Added UiContainerOperation and ClearShaderProgramOperation for render pipelines
- Added ScrollBox#setMinHeight to override the style's minimum height
- Added UiElement#defer to defer method calls until the next frame
- ActionListeners now receive event details via ActionEvent instance
- Fixed Button instances not triggering right-click events
- Fixed ScrollBox#setMaxHeight triggering unnecessary layouts

[1.4.9]
- Fix @PostDeserialize not being invoked for nested objects

[1.4.8]
- Fix UiContainer not clearing active action element
- Fix Rectangle returning 0,0 as its center

[1.4.7]
- Graphics can now draw TiledDrawable instances
- Added RepeatedNinePatch which repeats instead of stretches
- UI element backgrounds can now set backgroundMode to "repeat" or "stretch"

[1.4.6]
- Reduce float array allocations in Polygon#setVertices
- Added ScreenBasedGame#getScreenManager and ScreenManager#getGameScreens

[1.4.5]
- Added Shape#add and Shape#subtract methods for modifying position
- QuadTree implementations can now specify a minimum quad size
- Added Positionable#moveTowards for easier movement logic
- Added Positionable#getDistanceTo(x,y)

[1.4.4]
- Added additional methods to geometry classes
-- Shape#getCenterX + Shape#getCenterY
-- Shape#scale
-- Shape#setRadius
-- Polygon#isEquilateral
-- LineSegment#getLength
- Added methods to preset singletons and prototypes for dependency injection
- Added @PostInject annotation to trigger methods after dependency injection
- @Autowired dependencies now also inject into super classes

[1.4.3]
- Fix UiContainer blocking keyUp/buttonUp events when it did not accept the original keyDown/buttonDown event

[1.4.2]
- Added TiledMap#getObjectGroups() method
- Added additional getProperties() methods to Tiled classes

[1.4.1]
- Added TiledCollisionMapper method to get objects by type
- Added DispersedIntervalEntitySystem

[1.4.0]
- Performance improvements to Polygon class
- Added @PostDeserialize annotation to trigger methods after deserialising from xml/json
- Added Graphics#drawBitmapFontCache
- Added backgrounds to Labels
- Added BitmapFont caching to UiFont
- Added FlexDirection for changing layout of children UI elements
- UI framework now renders text using BitmapFontCache instances
- UI elements that contain children now extend ParentUiElement class
-- Button is now a non-abstract class that acts as a parent element
-- TextButton and ImageButton are now utility classes
- Fixed serialisation of enums that contain abstract methods
- Moved Os util classes to natives-loader project

[1.3.1]
- Graphics can now take circle radius as an int or float
- Added methods to access RenderLayer children
- Added UiContainerListener interface for listening to UiContainer events
- Fixed ninepatch sizes not applying to Buttons correctly

[1.3.0]
- Updated to libGDX 1.9.4, roboVM 2.2.0, and artemis-odb 1.4.0
- Updated to Android build tools 23.0.1
- (#38) Added drawNinePatch() and clearScaling() methods to Graphics
- (#45) Added contains and getDistanceFromCenter to Circle
- (#45) Added fillShape() method to Graphics class
- (#45) Added Shape#intersects(Shape) and Shape#contains(Shape)
- (#45) Added Polygon and Triangle classes. Rectangle now backed by Polygon.
- (#46) Fixed ParticleEffect not flipped correctly on load
- (#48) Fixed alpha channel not being applied to line rendering
- (#50) Fixed TiledMap rendering incorrectly when scaled down
- (#54) Added performance benchmarking for collisions
- (#55) Added non-rectangle support to RegionQuadTree and ConcurrentRegionQuadTree
- Improved Graphics#clip performance on mobile devices (changed to Depth Buffer method)
- Added UI framework (mini2Dx-ui)
- Added headless runtime (mini2Dx-headless)
- Added controller mappings - Xbox One, Xbox 360 controllers
- Added controller dead zone implementations - axial, radial and scaled radial
- Added render pipeline feature
- Added RegularShape classes (shapes with equal interior angles)
- Added NPE prevention to TiledCollisionMapper
- Added additional drawTexture() methods to Graphics
- Added Sizeable and SizeChangeListener interfaces
- Added GameResizeListener and removed onResize method from GameContainer
- Added MdxException for mini2Dx runtime exceptions
- Added WorldListener interface to listen for entity creation/deletion
- Added TextureRegion setFlip, setFlipX and setFlipY
- Added Graphics.setRotation
- Added getPixelWidth() and getPixelHeight() to TiledMap
- Added non-entity render and interpolate Artemis systems
- Positionable instances now have getId() method
- Improved pixel rounding and reduced interpolation for CollisionBox, CollisionCircle and CollisionPoint
- Mdx.json can now read/write to/from FileHandle instances
- Added @NonConcrete annotation for interface serialization in Mdx.xml and Mdx.json
- Added @ConstructorArg for constructor based serialization in Mdx.xml and Mdx.json
- Fixed inconsistencies in TextureRegion and NinePatch APIs
- Fixed Mdx.xml not deserializing maps correctly when values are objects
- Fixed Mdx.xml and Mdx.json not serializing/deserialzing super class fields
- Fixed Mdx.xml and Mdx.json not deserialzing enum fields correctly
- Fixed Animation flipping Sprites when rendering at a coordinate
- Fixed TiledParser exception when TiledObjects had non-integer coordinates
- TiledObjectGroup instances are now treated as layers to match Tiled specification
- QuadTrees
  * Added QuadTree interface for all QuadTree implementations
  * Existing Quad class renamed to PointQuadTree
  * Added thread-safe versions of PointQuadTree and RegionQuadTree
  * QuadTrees now have a watermark for remerging empty quads
  * Performance improvements to QuadTree implementations

[1.2.1]
- (#39) Fixed Animation flipping Sprites by default

[1.2.0]
- Updated to libGDX 1.6.5 and roboVM 1.6.0
- (#28) Added artemis-odb integration
- (#34) Fixed input not being polled if multiple updates occur in one frame
- (#35) Added TextureRegion wrapper class
- Added mini2Dx-specific game launcher classes
- Added forceTo(x, y) method to CollisionPoint and CollisionCircle
- Fixed tile image and id calculation for tilesets with margin and/or spacing

[1.1.0]
- Updated to libGDX 1.6.4, roboVM 1.5.0 and reflections 0.9.10
- (#25) Added isometric Tiled map support
- Added utility classes for extracting collision data from TiledMap instances
- Fixed exception when disposing orthogonal TiledMaps that do not use caching

[1.0.1]
- Fixed reentering issues with position listener locks

[1.0.0]
- Initial release
